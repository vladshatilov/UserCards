{"ast":null,"code":"var _jsxFileName = \"Q:\\\\app_django_react_v01\\\\main_app_ui\\\\src\\\\Step3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MainContainer } from \"./components/MainContainer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Form } from \"./components/Form\";\nimport { FileInput } from \"./components/FileInput\";\nimport { useForm } from \"react-hook-form\";\nimport { PrimaryButton } from \"./components/PrimaryButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { useData } from \"./DataContext\";\nimport Dropzone, { useDropzone } from 'react-dropzone';\nimport { List, ListItem } from \"material-ui\";\nimport { ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { InsertDriveFile } from \"@material-ui/icons\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Step3 = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    data,\n    setValues\n  } = useData();\n  const {\n    register,\n    control,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      files: data.files\n    }\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    history.push('/result'); // setValues(data)\n  };\n\n  const res = useEffect(() => {\n    console.log(data); // console.log(files)\n  }, [data]);\n  const res2 = useEffect(() => {\n    console.log(data);\n  }, []);\n  const MAX_SIZE = 5242880;\n  const [imgData, setImgData] = useState(null);\n\n  const onChangePicture = e => {\n    if (e.target.files[0]) {\n      console.log(\"picture: \", e.target.files); // setPicture(e.target.files[0]);\n\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        setImgData(reader.result);\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: 'h2',\n      variant: 'h5',\n      children: \"Step three\\uD83E\\uDD14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: acceptedFiles => {\n          setValues({\n            files: acceptedFiles\n          });\n          onChangePicture(acceptedFiles); // const reader = new FileReader();\n          // reader.readAsDataURL(acceptedFiles);\n          //\n          // reader.onloadend = () => {\n          //     setImgData(reader.result);\n          // }\n          // setImgData(reader.readAsDataURL(acceptedFiles));\n          // setImgData(acceptedFiles);\n          // reader.addEventListener('load', () => {\n          //     setImgData(reader.result);\n          // })\n          // setImgData();\n        },\n        accept: \"image/jpeg, image/png\",\n        maxSize: MAX_SIZE,\n        children: ({\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: 'files',\n              multiple: false,\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop some files here, or click to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"(Only *.jpeg and *.png images will be accepted)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: data.files && data.files.map((f, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(InsertDriveFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: f.name,\n              secondary: f.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"picture__preload\",\n              src: imgData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"picture__preload\",\n          src: imgData,\n          width: \"396px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step3, \"RdAru7pmtxY/wirB/tbRPRrpQmo=\", false, function () {\n  return [useHistory, useData, useForm];\n});\n\n_c = Step3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step3\");","map":{"version":3,"sources":["Q:/app_django_react_v01/main_app_ui/src/Step3.js"],"names":["React","useEffect","useState","MainContainer","Typography","Form","FileInput","useForm","PrimaryButton","useHistory","useData","Dropzone","useDropzone","List","ListItem","ListItemIcon","ListItemText","InsertDriveFile","MuiThemeProvider","Step3","history","data","setValues","register","control","handleSubmit","defaultValues","files","onSubmit","console","log","push","res","res2","MAX_SIZE","imgData","setImgData","onChangePicture","e","target","reader","FileReader","addEventListener","result","readAsDataURL","acceptedFiles","getRootProps","getInputProps","map","f","index","name","size"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Form} from \"./components/Form\";\r\nimport {FileInput} from \"./components/FileInput\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useData} from \"./DataContext\";\r\nimport Dropzone, {useDropzone} from 'react-dropzone';\r\nimport {List, ListItem} from \"material-ui\";\r\nimport {ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {InsertDriveFile} from \"@material-ui/icons\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n\r\nexport const Step3 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n    const {register, control, handleSubmit} = useForm({\r\n        defaultValues: {\r\n            files: data.files\r\n        }\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        history.push('/result')\r\n        // setValues(data)\r\n    }\r\n\r\n    const res = useEffect(() => {\r\n        console.log(data)\r\n        // console.log(files)\r\n    }, [data])\r\n\r\n    const res2 = useEffect(() => {\r\n        console.log(data)\r\n    }, [])\r\n    const MAX_SIZE = 5242880;\r\n\r\n    const [imgData, setImgData] = useState(null);\r\n    const onChangePicture = (e) => {\r\n        if (e.target.files[0]) {\r\n            console.log(\"picture: \", e.target.files);\r\n            // setPicture(e.target.files[0]);\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () => {\r\n                setImgData(reader.result);\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component={'h2'} variant={'h5'}>\r\n                Step three🤔\r\n            </Typography>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                {/*<FileInput name={'files'} control={control}/>*/}\r\n                <Dropzone onDrop={acceptedFiles => {\r\n                    setValues({\r\n                        files: acceptedFiles\r\n                    })\r\n                    onChangePicture(acceptedFiles);\r\n                    // const reader = new FileReader();\r\n                    // reader.readAsDataURL(acceptedFiles);\r\n                    //\r\n                    // reader.onloadend = () => {\r\n                    //     setImgData(reader.result);\r\n                    // }\r\n                    // setImgData(reader.readAsDataURL(acceptedFiles));\r\n                    // setImgData(acceptedFiles);\r\n                    // reader.addEventListener('load', () => {\r\n                    //     setImgData(reader.result);\r\n                    // })\r\n                    // setImgData();\r\n                }} accept=\"image/jpeg, image/png\" maxSize={MAX_SIZE}>\r\n                    {({getRootProps, getInputProps}) => (\r\n                        <section>\r\n                            <div {...getRootProps()}>\r\n                                <input name={'files'} multiple={false} {...getInputProps()} />\r\n                                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n                <MuiThemeProvider>\r\n                    <List>\r\n                        {/*<p>test check</p>*/}\r\n                        {\r\n                            data.files && data.files.map((f, index) => (\r\n                                <ListItem key={index}>\r\n                                    {/*<p>test check</p>*/}\r\n                                    <ListItemIcon>\r\n                                        <InsertDriveFile/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={f.name} secondary={f.size}/>\r\n                                    {/*<img className=\"picture__preload\" src={imgData[0].path} />*/}\r\n                                    <img className=\"picture__preload\" src={imgData}/>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                    <img className=\"picture__preload\" src={imgData} width={\"396px\"} />\r\n                </MuiThemeProvider>\r\n                <PrimaryButton>Next</PrimaryButton>\r\n            </Form>\r\n        </MainContainer>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}