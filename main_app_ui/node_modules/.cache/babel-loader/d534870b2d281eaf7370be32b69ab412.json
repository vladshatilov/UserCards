{"ast":null,"code":"var _jsxFileName = \"Q:\\\\app_django_react_v01\\\\main_app_ui\\\\src\\\\Step2.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MainContainer } from \"./components/MainContainer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Form } from \"./components/Form\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport { Input } from \"./components/Input\";\nimport { PrimaryButton } from \"./components/PrimaryButton\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from 'yup';\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport { FormControlLabel } from \"@material-ui/core\";\nimport { useData } from \"./DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email(\"Email should have correct format\").required('This is required')\n});\n\nconst normalizePhone = value => {\n  const tempNumber = parsePhoneNumberFromString(value);\n\n  if (!tempNumber) {\n    return value;\n  }\n\n  return tempNumber.formatInternational();\n};\n\nexport const Step2 = () => {\n  _s();\n\n  var _errors$email;\n\n  const history = useHistory();\n  const {\n    data,\n    setValues\n  } = useData();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    defaultValues: {\n      email: data.email,\n      // hasPhone: data.hasPhone,\n      testPhone: data.testPhone,\n      phoneNumber: data.phoneNumber\n    },\n    mode: 'onBlur',\n    resolver: yupResolver(schema)\n  });\n  const hasPhone = watch('hasPhone', false);\n  const testingPhone = watch('testPhone');\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(hasPhone);\n    history.push('/step3');\n    setValues(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: 'h2',\n      variant: 'h5',\n      children: \"Step two\\uD83D\\uDC17\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Input, { ...register('email', {\n          required: true\n        }),\n        id: 'email',\n        type: 'email',\n        label: 'Email',\n        name: 'email',\n        error: !!errors.email,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'checkbox',\n        color: 'primary',\n        ...register('testPhone')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), \"Do you have a phone?\", testingPhone && /*#__PURE__*/_jsxDEV(Input, {\n        name: 'phoneNumber',\n        ...register('phoneNumber'),\n        id: 'phoneNumber',\n        type: 'tel',\n        label: 'Phone number',\n        onChange: event => {\n          event.target.value = normalizePhone(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step2, \"GeeVHjKzUDyyCRn0UpPc4Tq+shE=\", false, function () {\n  return [useHistory, useData, useForm];\n});\n\n_c = Step2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"sources":["Q:/app_django_react_v01/main_app_ui/src/Step2.js"],"names":["React","MainContainer","Typography","Checkbox","Form","useForm","useHistory","Input","PrimaryButton","yupResolver","yup","parsePhoneNumberFromString","FormControlLabel","useData","schema","object","shape","email","string","required","normalizePhone","value","tempNumber","formatInternational","Step2","history","data","setValues","register","handleSubmit","formState","errors","watch","defaultValues","testPhone","phoneNumber","mode","resolver","hasPhone","testingPhone","onSubmit","console","log","push","message","event","target"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Form} from \"./components/Form\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Input} from \"./components/Input\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as yup from 'yup';\r\nimport {parsePhoneNumberFromString} from \"libphonenumber-js\";\r\nimport {FormControlLabel} from \"@material-ui/core\";\r\nimport {useData} from \"./DataContext\";\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().email(\"Email should have correct format\").required('This is required')\r\n})\r\n\r\nconst normalizePhone = (value) => {\r\n    const tempNumber = parsePhoneNumberFromString(value)\r\n    if(!tempNumber){\r\n        return value\r\n    }\r\n    return tempNumber.formatInternational()\r\n}\r\n\r\nexport const Step2 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n    const {register, handleSubmit, formState: {errors}, watch} = useForm({\r\n        defaultValues:{\r\n            email: data.email,\r\n            // hasPhone: data.hasPhone,\r\n            testPhone: data.testPhone,\r\n            phoneNumber: data.phoneNumber\r\n        },\r\n        mode: 'onBlur',\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n    const hasPhone = watch('hasPhone', false)\r\n    const testingPhone = watch('testPhone')\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        console.log(hasPhone)\r\n        history.push('/step3')\r\n        setValues(data)\r\n    }\r\n    return (\r\n        <MainContainer>\r\n            <Typography component={'h2'} variant={'h5'}>\r\n                Step two🐗\r\n            </Typography>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Input {...register('email', {required: true})}\r\n                       id={'email'}\r\n                       type={'email'}\r\n                       label={'Email'}\r\n                       name={'email'}\r\n                       error={!!errors.email}\r\n                       helperText={errors?.email?.message}\r\n                       required/>\r\n            {/*<FormControlLabel*/}\r\n            {/*    control={*/}\r\n            {/*        <Checkbox name={'hasPhone'} defaultValue={data.hasPhone} defaultChecked={data.hasPhone} {...register('hasPhone')} color={'primary'}/>*/}\r\n            {/*    }*/}\r\n            {/*    label={'Do you have a phone?'}*/}\r\n            {/*/>*/}\r\n            {/*<Checkbox {...register('hasPhone',{required:true})} color={'primary'}/>*/}\r\n            {/*{*/}\r\n            {/*    hasPhone && (*/}\r\n            {/*        <input type={'number'}/>*/}\r\n            {/*        // <Input name={'phoneNumber'} {...register('phoneNumber')} id={'phoneNumber'} type={'tel'} label={'Phone number'} />*/}\r\n            {/*    )*/}\r\n            {/*}*/}\r\n            <input type={'checkbox'} color={'primary'} {...register('testPhone')} />Do you have a phone?\r\n            {testingPhone && <Input name={'phoneNumber'}\r\n                                    {...register('phoneNumber')}\r\n                                    id={'phoneNumber'}\r\n                                    type={'tel'}\r\n                                    label={'Phone number'}\r\n                                    onChange={(event)=> {event.target.value = normalizePhone(event.target.value)}} />}\r\n            <PrimaryButton>Next</PrimaryButton>\r\n            </Form>\r\n        </MainContainer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}