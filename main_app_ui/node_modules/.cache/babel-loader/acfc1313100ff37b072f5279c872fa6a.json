{"ast":null,"code":"var _jsxFileName = \"Q:\\\\app_django_react_v01\\\\main_app_ui\\\\src\\\\Step1.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MainContainer } from \"./components/MainContainer\";\nimport { Typography } from \"@material-ui/core\";\nimport { Form } from \"./components/Form\";\nimport { Input } from './components/Input';\nimport { useForm } from \"react-hook-form\";\nimport { PrimaryButton } from \"./components/PrimaryButton\";\nimport * as yup from 'yup';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  firstName: yup.string().matches(/^([^0-9]*)$/, \"First name should not contain numbers\").required(\"First name is required\"),\n  lastName: yup.string().matches(/^([^0-9]*)$/, \"Last name should not contain numbers\").required(\"Last name is required\")\n});\nexport const Step1 = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(errors.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: 'h2',\n      variant: 'h5',\n      children: \"Step one\\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Input, { ...register('firstName', {\n          required: true,\n          maxLength: 30\n        }),\n        id: 'firstName',\n        type: \"text\",\n        label: \"First Name\" // error={!!errors.firstName}\n        // helperText={errors?.firstName?.message}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), errors.firstName && errors.firstName.required === \"true\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('lastName', {\n          required: true,\n          maxLength: 30\n        }),\n        id: 'lastName',\n        type: \"text\",\n        label: \"Last Name\" // error={!!errors.lastName}\n        // helperText={errors?.lastName?.message}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        children: \"Next step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Step1, \"6neIOdugDL49gSBGLUqrzDuYjQI=\", false, function () {\n  return [useForm];\n});\n\n_c = Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["Q:/app_django_react_v01/main_app_ui/src/Step1.js"],"names":["React","MainContainer","Typography","Form","Input","useForm","PrimaryButton","yup","yupResolver","schema","object","shape","firstName","string","matches","required","lastName","Step1","register","handleSubmit","formState","errors","mode","resolver","onSubmit","data","console","log","name","maxLength"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,KAAR,QAAoB,oBAApB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;AAEA,MAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,EAAAA,SAAS,EAAEL,GAAG,CAACM,MAAJ,GAAaC,OAAb,CAAqB,aAArB,EAAoC,uCAApC,EAA6EC,QAA7E,CAAsF,wBAAtF,CADmB;AAE9BC,EAAAA,QAAQ,EAAET,GAAG,CAACM,MAAJ,GAAaC,OAAb,CAAqB,aAArB,EAAoC,sCAApC,EAA4EC,QAA5E,CAAqF,uBAArF;AAFoB,CAAnB,CAAf;AAMA,OAAO,MAAME,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAApC,MAAkDhB,OAAO,CAAC;AAC5DiB,IAAAA,IAAI,EAAE,QADsD;AAE5DC,IAAAA,QAAQ,EAAEf,WAAW,CAACC,MAAD;AAFuC,GAAD,CAA/D;;AAKA,QAAMe,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,IAAnB;AACH,GAHD;;AAIA,sBAAO,QAAC,aAAD;AAAA,4BACH,QAAC,UAAD;AAAY,MAAA,SAAS,EAAE,IAAvB;AAA6B,MAAA,OAAO,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAIH,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAET,YAAY,CAACK,QAAD,CAA5B;AAAA,8BACI,QAAC,KAAD,OAAWN,QAAQ,CAAC,WAAD,EACf;AAACH,UAAAA,QAAQ,EAAE,IAAX;AAAiBc,UAAAA,SAAS,EAAE;AAA5B,SADe,CAAnB;AAEO,QAAA,EAAE,EAAE,WAFX;AAEwB,QAAA,IAAI,EAAE,MAF9B;AAGO,QAAA,KAAK,EAAE,YAHd,CAIO;AACA;;AALP;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKR,MAAM,CAACT,SAAP,IAAoBS,MAAM,CAACT,SAAP,CAAiBG,QAAjB,KAA8B,MAAlD,iBAA4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARjE,eASI,QAAC,KAAD,OAAWG,QAAQ,CAAC,UAAD,EACf;AAACH,UAAAA,QAAQ,EAAE,IAAX;AAAiBc,UAAAA,SAAS,EAAE;AAA5B,SADe,CAAnB;AAEO,QAAA,EAAE,EAAE,UAFX;AAGO,QAAA,IAAI,EAAE,MAHb;AAIO,QAAA,KAAK,EAAE,WAJd,CAKO;AACA;;AANP;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAwBH,CAlCM;;GAAMZ,K;UAC+CZ,O;;;KAD/CY,K","sourcesContent":["import React from 'react';\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {Form} from \"./components/Form\";\r\nimport {Input} from './components/Input';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport * as yup from 'yup';\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().matches(/^([^0-9]*)$/, \"First name should not contain numbers\").required(\"First name is required\"),\r\n    lastName: yup.string().matches(/^([^0-9]*)$/, \"Last name should not contain numbers\").required(\"Last name is required\")\r\n})\r\n\r\n\r\nexport const Step1 = () => {\r\n    const {register, handleSubmit, formState: { errors }} = useForm({\r\n        mode: 'onBlur',\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        console.log(errors.name)\r\n    }\r\n    return <MainContainer>\r\n        <Typography component={'h2'} variant={'h5'}>\r\n            Step oneðŸ”¥\r\n        </Typography>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Input {...register('firstName',\r\n                {required: true, maxLength: 30})}\r\n                   id={'firstName'} type={\"text\"}\r\n                   label={\"First Name\"}\r\n                   // error={!!errors.firstName}\r\n                   // helperText={errors?.firstName?.message}\r\n            />\r\n            {errors.firstName && errors.firstName.required === \"true\" && <span>This is required</span>}\r\n            <Input {...register('lastName',\r\n                {required: true, maxLength: 30})}\r\n                   id={'lastName'}\r\n                   type={\"text\"}\r\n                   label={\"Last Name\"}\r\n                   // error={!!errors.lastName}\r\n                   // helperText={errors?.lastName?.message}\r\n            />\r\n            <PrimaryButton>Next step</PrimaryButton>\r\n        </Form>\r\n    </MainContainer>\r\n}"]},"metadata":{},"sourceType":"module"}