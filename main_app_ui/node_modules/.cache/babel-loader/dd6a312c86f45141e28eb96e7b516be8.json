{"ast":null,"code":"var _jsxFileName = \"Q:\\\\app_django_react_v01\\\\main_app_ui\\\\src\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MainContainer } from \"./components/MainContainer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useData } from \"./DataContext\";\nimport { makeStyles, MuiThemeProvider, TableContainer } from \"@material-ui/core\";\nimport { Paper } from \"material-ui\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"@material-ui/core/Table\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { InsertDriveFile } from \"@material-ui/icons\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { PrimaryButton } from \"./components/PrimaryButton\";\nimport Swal from 'sweetalert2';\nimport Confetti from \"react-confetti/src/Confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: \"30px\"\n  },\n  table: {\n    marginBottom: \"30px\"\n  }\n}));\nexport const Result = () => {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const {\n    data\n  } = useData();\n  const entries = Object.entries(data).filter(entry => entry[0] !== 'files');\n  const {\n    files\n  } = data;\n  const myStyle = useStyles();\n\n  const onSubmit = async () => {\n    const formData = new FormData();\n    Swal.fire(\"Great job!\", \"You've passed all data\", \"success\");\n    setSuccess(true);\n\n    if (success) {\n      return /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    } // if (data.files) {\n    //     data.files.forEach(file => {\n    //         formData.append(\"files\", file, file.name)\n    //     })\n    // }\n    //\n    // entries.forEach(entry => {\n    //     formData.append(entry[0], entry[1])\n    // })\n    //\n    // const res = await fetch(\"http://localhost:4000/\", {\n    //     method: \"POST\",\n    //     body: formData\n    // })\n    //\n    // if(res.status==200){\n    //     Swal.fire(\"Great job!\",\"You've passed all data\", \"success\")\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: 'h2',\n      variant: 'h5',\n      children: \"Form data \\uD83D\\uDC96\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: myStyle.root,\n        component: \"div\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: myStyle.table,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: 'right',\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: entries.map(entry => {\n              var _entry$;\n\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: entry[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: 'right',\n                  children: (_entry$ = entry[1]) === null || _entry$ === void 0 ? void 0 : _entry$.toString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this)]\n              }, entry[0], true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), files && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: 'h2',\n          variant: 'h5',\n          children: \"Files \\uD83D\\uDC27\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: files.map((f, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(InsertDriveFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: f.name,\n              secondary: f.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      onClick: onSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/',\n      children: \"To the start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Result, \"81hZmFPXyAnqp1ofM34KxpSo7Zo=\", false, function () {\n  return [useData, useStyles];\n});\n\n_c = Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["Q:/app_django_react_v01/main_app_ui/src/Result.js"],"names":["React","useState","MainContainer","Typography","useData","makeStyles","MuiThemeProvider","TableContainer","Paper","TableHead","List","ListItem","TableCell","TableRow","TableBody","Link","Table","ListItemIcon","InsertDriveFile","ListItemText","PrimaryButton","Swal","Confetti","useStyles","theme","root","marginBottom","table","Result","success","setSuccess","data","entries","Object","filter","entry","files","myStyle","onSubmit","formData","FormData","fire","map","toString","f","index","name","size"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useData} from \"./DataContext\";\r\nimport {makeStyles, MuiThemeProvider, TableContainer} from \"@material-ui/core\";\r\nimport {Paper} from \"material-ui\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {InsertDriveFile} from \"@material-ui/icons\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport Swal from 'sweetalert2';\r\nimport Confetti from \"react-confetti/src/Confetti\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: \"30px\"\r\n    },\r\n    table: {\r\n        marginBottom: \"30px\"\r\n    },\r\n}));\r\nexport const Result = () => {\r\n    const [success, setSuccess] = useState(false);\r\n    const {data} = useData()\r\n    const entries = Object.entries(data).filter((entry) => entry[0] !== 'files')\r\n    const {files} = data;\r\n    const myStyle = useStyles()\r\n\r\n    const onSubmit = async () => {\r\n        const formData = new FormData();\r\n        Swal.fire(\"Great job!\",\"You've passed all data\", \"success\")\r\n        setSuccess(true)\r\n        if(success){\r\n            return <Confetti />\r\n        }\r\n        // if (data.files) {\r\n        //     data.files.forEach(file => {\r\n        //         formData.append(\"files\", file, file.name)\r\n        //     })\r\n        // }\r\n        //\r\n        // entries.forEach(entry => {\r\n        //     formData.append(entry[0], entry[1])\r\n        // })\r\n        //\r\n        // const res = await fetch(\"http://localhost:4000/\", {\r\n        //     method: \"POST\",\r\n        //     body: formData\r\n        // })\r\n        //\r\n        // if(res.status==200){\r\n        //     Swal.fire(\"Great job!\",\"You've passed all data\", \"success\")\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component={'h2'} variant={'h5'}>\r\n                Form data 💖\r\n            </Typography>\r\n            <MuiThemeProvider>\r\n                <TableContainer className={myStyle.root} component={\"div\"}>\r\n                    <Table className={myStyle.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    Field\r\n                                </TableCell>\r\n                                <TableCell align={'right'}>\r\n                                    Value\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                entries.map(entry => (\r\n                                    <TableRow key={entry[0]}>\r\n                                        <TableCell>{entry[0]}</TableCell>\r\n                                        <TableCell align={'right'}>{entry[1]?.toString()}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {\r\n                    files &&\r\n                    <>\r\n                        <Typography component={'h2'} variant={'h5'}>\r\n                            Files 🐧\r\n                        </Typography>\r\n                        <List>\r\n                            {\r\n                                files.map((f, index) => (\r\n                                    <ListItem key={index}>\r\n                                        <ListItemIcon>\r\n                                            <InsertDriveFile/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={f.name} secondary={f.size}/>\r\n                                    </ListItem>\r\n                                ))\r\n                            }\r\n                        </List>\r\n                    </>\r\n                }\r\n            </MuiThemeProvider>\r\n            <PrimaryButton onClick={onSubmit}>Submit</PrimaryButton>\r\n            <Link to={'/'}>To the start</Link>\r\n        </MainContainer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}