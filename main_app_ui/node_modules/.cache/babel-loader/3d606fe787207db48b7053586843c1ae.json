{"ast":null,"code":"var _jsxFileName = \"Q:\\\\app_django_react_v01\\\\main_app_ui\\\\src\\\\Step1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MainContainer } from \"./components/MainContainer\";\nimport { Typography } from \"@material-ui/core\";\nimport { Form } from \"./components/Form\";\nimport { Input } from './components/Input';\nimport { useForm } from \"react-hook-form\";\nimport { PrimaryButton } from \"./components/PrimaryButton\";\nimport * as yup from 'yup';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useData } from \"./DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  firstName: yup.string().matches(/^([^0-9]*)$/, \"First name should not contain numbers\").required(\"First name is required\"),\n  lastName: yup.string().matches(/^([^0-9]*)$/, \"Last name should not contain numbers\").required(\"Last name is required\")\n});\nexport const Step1 = () => {\n  _s();\n\n  var _errors$firstName, _errors$lastName;\n\n  const history = useHistory();\n  const {\n    data,\n    setValues\n  } = useData();\n  useEffect(() => {\n    setValues(JSON.parse(window.localStorage.getItem('data')));\n    console.log(JSON.parse(window.localStorage.getItem('data'))); // console.log(window.localStorage.getItem('data.firstName'))\n  }, []);\n  useEffect(() => {\n    console.log(JSON.stringify(data));\n    window.localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      firstName: data.firstName,\n      lastName: data.lastName\n    },\n    mode: 'onBlur',\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(errors.name);\n    history.push('/step2');\n    setValues(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: 'h2',\n      variant: 'h5',\n      children: \"Step one\\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Input, { ...register('firstName', {\n          required: true,\n          maxLength: 30\n        }),\n        id: 'firstName',\n        type: \"text\" // autoFocus={true}\n        ,\n        label: \"First Name\",\n        error: !!errors.firstName,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('lastName', {\n          required: true,\n          maxLength: 30\n        }),\n        id: 'lastName',\n        type: \"text\",\n        label: \"Last Name\",\n        error: !!errors.lastName,\n        helperText: errors === null || errors === void 0 ? void 0 : (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        children: \"Next step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Step1, \"kVta9rGskwL3Y5+KjkOPIOzl1xQ=\", false, function () {\n  return [useHistory, useData, useForm];\n});\n\n_c = Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["Q:/app_django_react_v01/main_app_ui/src/Step1.js"],"names":["React","useEffect","useHistory","MainContainer","Typography","Form","Input","useForm","PrimaryButton","yup","yupResolver","useData","schema","object","shape","firstName","string","matches","required","lastName","Step1","history","data","setValues","JSON","parse","window","localStorage","getItem","console","log","stringify","setItem","register","handleSubmit","formState","errors","defaultValues","mode","resolver","onSubmit","name","push","maxLength","message"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {Form} from \"./components/Form\";\r\nimport {Input} from './components/Input';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport * as yup from 'yup';\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {useData} from \"./DataContext\";\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().matches(/^([^0-9]*)$/, \"First name should not contain numbers\").required(\"First name is required\"),\r\n    lastName: yup.string().matches(/^([^0-9]*)$/, \"Last name should not contain numbers\").required(\"Last name is required\")\r\n})\r\n\r\n\r\nexport const Step1 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n\r\n    useEffect(()=>{\r\n        setValues(JSON.parse(window.localStorage.getItem('data')))\r\n        console.log(JSON.parse(window.localStorage.getItem('data')))\r\n        // console.log(window.localStorage.getItem('data.firstName'))\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        console.log(JSON.stringify(data))\r\n        window.localStorage.setItem('data',JSON.stringify(data))\r\n    },[data]);\r\n    \r\n    const {register, handleSubmit, formState: { errors }} = useForm({\r\n        defaultValues: {firstName: data.firstName, lastName: data.lastName},\r\n        mode: 'onBlur',\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        console.log(errors.name)\r\n        history.push('/step2')\r\n        setValues(data)\r\n    }\r\n    return <MainContainer>\r\n        <Typography component={'h2'} variant={'h5'}>\r\n            Step oneðŸ”¥\r\n        </Typography>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Input {...register('firstName',{required: true, maxLength: 30})}\r\n                   id={'firstName'}\r\n                   type={\"text\"}\r\n                   // autoFocus={true}\r\n                   label={\"First Name\"}\r\n                   error={!!errors.firstName}\r\n                   helperText={errors?.firstName?.message}\r\n            />\r\n            {/*{errors.firstName && errors.firstName.type  === \"required\" && <span>This is required</span>}*/}\r\n            <Input {...register('lastName',{required: true, maxLength: 30})}\r\n                   id={'lastName'}\r\n                   type={\"text\"}\r\n                   label={\"Last Name\"}\r\n                   error={!!errors.lastName}\r\n                   helperText={errors?.lastName?.message}\r\n            />\r\n            <PrimaryButton>Next step</PrimaryButton>\r\n        </Form>\r\n    </MainContainer>\r\n}"]},"metadata":{},"sourceType":"module"}