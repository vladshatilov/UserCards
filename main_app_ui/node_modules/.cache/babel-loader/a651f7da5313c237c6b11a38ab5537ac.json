{"ast":null,"code":"import _objectSpread from\"Q:/app_django_react_v01/main_app_ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{MainContainer}from\"./components/MainContainer\";import Typography from\"@material-ui/core/Typography\";import Checkbox from'@material-ui/core/Checkbox';import{Form}from\"./components/Form\";import{useForm}from\"react-hook-form\";import{useHistory}from'react-router-dom';import{Input}from\"./components/Input\";import{PrimaryButton}from\"./components/PrimaryButton\";import{yupResolver}from\"@hookform/resolvers/yup\";import*as yup from'yup';import{parsePhoneNumberFromString}from\"libphonenumber-js\";import{FormControlLabel}from\"@material-ui/core\";import{useData}from\"./DataContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var schema=yup.object().shape({email:yup.string().email(\"Email should have correct format\").required('This is required')});var normalizePhone=function normalizePhone(value){var tempNumber=parsePhoneNumberFromString(value);if(!tempNumber){return value;}return tempNumber.formatInternational();};export var Step2=function Step2(){var _errors$email;var history=useHistory();var _useData=useData(),data=_useData.data,setValues=_useData.setValues;var _useForm=useForm({defaultValues:{email:data.email,hasPhone:data.hasPhone,// testPhone: data.testPhone,\nphoneNumber:data.phoneNumber},mode:'onBlur',resolver:yupResolver(schema)}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors,watch=_useForm.watch;// const hasPhone = watch('hasPhone', false)\nvar hasPhone=watch('hasPhone',false);var onSubmit=function onSubmit(data){console.log(data);console.log(hasPhone);history.push('/step3');setValues(data);};return/*#__PURE__*/_jsxs(MainContainer,{children:[/*#__PURE__*/_jsx(Typography,{component:'h2',variant:'h5',children:\"Step two\\uD83D\\uDC17\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},register('email',{required:true})),{},{id:'email',type:'email',label:'Email',name:'email',error:!!errors.email,helperText:errors===null||errors===void 0?void 0:(_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.message,required:true})),/*#__PURE__*/_jsx(\"input\",_objectSpread({type:'checkbox',color:'primary'},register('hasPhone'))),\"Do you have a phone?\",hasPhone&&/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({name:'phoneNumber'},register('phoneNumber')),{},{id:'phoneNumber',type:'tel',label:'Phone number',onChange:function onChange(event){event.target.value=normalizePhone(event.target.value);}})),/*#__PURE__*/_jsx(PrimaryButton,{children:\"Next\"})]})]});};","map":{"version":3,"sources":["Q:/app_django_react_v01/main_app_ui/src/Step2.js"],"names":["React","MainContainer","Typography","Checkbox","Form","useForm","useHistory","Input","PrimaryButton","yupResolver","yup","parsePhoneNumberFromString","FormControlLabel","useData","schema","object","shape","email","string","required","normalizePhone","value","tempNumber","formatInternational","Step2","history","data","setValues","defaultValues","hasPhone","phoneNumber","mode","resolver","register","handleSubmit","errors","formState","watch","onSubmit","console","log","push","message","event","target"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Form} from \"./components/Form\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Input} from \"./components/Input\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as yup from 'yup';\r\nimport {parsePhoneNumberFromString} from \"libphonenumber-js\";\r\nimport {FormControlLabel} from \"@material-ui/core\";\r\nimport {useData} from \"./DataContext\";\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().email(\"Email should have correct format\").required('This is required')\r\n})\r\n\r\nconst normalizePhone = (value) => {\r\n    const tempNumber = parsePhoneNumberFromString(value)\r\n    if(!tempNumber){\r\n        return value\r\n    }\r\n    return tempNumber.formatInternational()\r\n}\r\n\r\nexport const Step2 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n    const {register, handleSubmit, formState: {errors}, watch} = useForm({\r\n        defaultValues:{\r\n            email: data.email,\r\n            hasPhone: data.hasPhone,\r\n            // testPhone: data.testPhone,\r\n            phoneNumber: data.phoneNumber\r\n        },\r\n        mode: 'onBlur',\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n    // const hasPhone = watch('hasPhone', false)\r\n    const hasPhone = watch('hasPhone', false)\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        console.log(hasPhone)\r\n        history.push('/step3')\r\n        setValues(data)\r\n    }\r\n    return (\r\n        <MainContainer>\r\n            <Typography component={'h2'} variant={'h5'}>\r\n                Step twoüêó\r\n            </Typography>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Input {...register('email', {required: true})}\r\n                       id={'email'}\r\n                       type={'email'}\r\n                       label={'Email'}\r\n                       name={'email'}\r\n                       error={!!errors.email}\r\n                       helperText={errors?.email?.message}\r\n                       required/>\r\n            {/*<FormControlLabel*/}\r\n            {/*    control={*/}\r\n            {/*        <Checkbox name={'hasPhone'} defaultValue={data.hasPhone} defaultChecked={data.hasPhone} {...register('hasPhone')} color={'primary'}/>*/}\r\n            {/*    }*/}\r\n            {/*    label={'Do you have a phone?'}*/}\r\n            {/*/>*/}\r\n            {/*<Checkbox {...register('hasPhone',{required:true})} color={'primary'}/>*/}\r\n            {/*{*/}\r\n            {/*    hasPhone && (*/}\r\n            {/*        <input type={'number'}/>*/}\r\n            {/*        // <Input name={'phoneNumber'} {...register('phoneNumber')} id={'phoneNumber'} type={'tel'} label={'Phone number'} />*/}\r\n            {/*    )*/}\r\n            {/*}*/}\r\n            <input type={'checkbox'} color={'primary'} {...register('hasPhone')} />Do you have a phone?\r\n            {hasPhone && <Input name={'phoneNumber'}\r\n                                    {...register('phoneNumber')}\r\n                                    id={'phoneNumber'}\r\n                                    type={'tel'}\r\n                                    label={'Phone number'}\r\n                                    onChange={(event)=> {event.target.value = normalizePhone(event.target.value)}} />}\r\n            <PrimaryButton>Next</PrimaryButton>\r\n            </Form>\r\n        </MainContainer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}