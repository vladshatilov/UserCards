{"ast":null,"code":"var _jsxFileName = \"Q:\\\\app_django_react_v01\\\\main_app_ui\\\\src\\\\Step3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MainContainer } from \"./components/MainContainer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Form } from \"./components/Form\";\nimport { FileInput } from \"./components/FileInput\";\nimport { useForm } from \"react-hook-form\";\nimport { PrimaryButton } from \"./components/PrimaryButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { useData } from \"./DataContext\";\nimport Dropzone, { useDropzone } from 'react-dropzone';\nimport { List, ListItem } from \"material-ui\";\nimport { ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { InsertDriveFile } from \"@material-ui/icons\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Step3 = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    data,\n    setValues\n  } = useData();\n  const {\n    register,\n    control,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      files: data.files,\n      imgData: data.imgData\n    }\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    history.push('/result'); // setValues(data)\n  };\n\n  const res = useEffect(() => {\n    console.log(data); // console.log(files)\n  }, [data]);\n  const res2 = useEffect(() => {\n    console.log(data);\n  }, []);\n  const MAX_SIZE = 5242880; // const [imgData, setImgData] = useState(null);\n  // const onChangePicture = (e) => {\n  //     if (e.target.files[0]) {\n  //         console.log(\"picture: \", e.target.files);\n  //         // setPicture(e.target.files[0]);\n  //         const reader = new FileReader();\n  //         reader.addEventListener(\"load\", () => {\n  //             setImgData(reader.result);\n  //         });\n  //         reader.readAsDataURL(e.target.files[0]);\n  //     }\n  // }\n  // const res3 = useEffect(() => {\n  //     console.log(imgData)\n  // }, [imgData])\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: 'h2',\n      variant: 'h5',\n      children: \"Step three\\uD83E\\uDD14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: acceptedFiles => {\n          setValues({\n            files: acceptedFiles\n          });\n          acceptedFiles.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onabort = () => console.log('file reading was aborted');\n\n            reader.onerror = () => console.log('file reading has failed');\n\n            reader.onload = () => {\n              // Do whatever you want with the file contents\n              // setImgData(reader.result);\n              setValues({\n                imgData: reader.result\n              });\n              const binaryStr = reader.result;\n              console.log(binaryStr);\n            };\n\n            reader.readAsDataURL(file); // reader.readAsArrayBuffer(file)\n          }); // onChangePicture(acceptedFiles);\n          // const reader = new FileReader();\n          // reader.readAsDataURL(acceptedFiles);\n          //\n          // reader.onloadend = () => {\n          //     setImgData(reader.result);\n          // }\n          // setImgData(reader.readAsDataURL(acceptedFiles));\n          // setImgData(acceptedFiles);\n          // reader.addEventListener('load', () => {\n          //     setImgData(reader.result);\n          // })\n          // setImgData();\n        },\n        multiple: false,\n        accept: \"image/jpeg, image/png\",\n        maxSize: MAX_SIZE,\n        children: ({\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: 'files',\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop some files here, or click to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"(Only *.jpeg and *.png images will be accepted)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: data.files && data.files.map((f, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: data.imgData && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"picture__preload\",\n                width: \"200px\",\n                src: data.imgData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              className: \"list__text\",\n              primary: f.name,\n              secondary: f.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step3, \"uy4b0J2C/bRNcrIDXyNxmdY2fbM=\", false, function () {\n  return [useHistory, useData, useForm];\n});\n\n_c = Step3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step3\");","map":{"version":3,"sources":["Q:/app_django_react_v01/main_app_ui/src/Step3.js"],"names":["React","useEffect","useState","MainContainer","Typography","Form","FileInput","useForm","PrimaryButton","useHistory","useData","Dropzone","useDropzone","List","ListItem","ListItemIcon","ListItemText","InsertDriveFile","MuiThemeProvider","Step3","history","data","setValues","register","control","handleSubmit","defaultValues","files","imgData","onSubmit","console","log","push","res","res2","MAX_SIZE","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","result","binaryStr","readAsDataURL","getRootProps","getInputProps","map","f","index","name","size"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Form} from \"./components/Form\";\r\nimport {FileInput} from \"./components/FileInput\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useData} from \"./DataContext\";\r\nimport Dropzone, {useDropzone} from 'react-dropzone';\r\nimport {List, ListItem} from \"material-ui\";\r\nimport {ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {InsertDriveFile} from \"@material-ui/icons\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n\r\nexport const Step3 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n    const {register, control, handleSubmit} = useForm({\r\n        defaultValues: {\r\n            files: data.files,\r\n            imgData: data.imgData\r\n        }\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        history.push('/result')\r\n        // setValues(data)\r\n    }\r\n\r\n    const res = useEffect(() => {\r\n        console.log(data)\r\n        // console.log(files)\r\n    }, [data])\r\n\r\n    const res2 = useEffect(() => {\r\n        console.log(data)\r\n    }, [])\r\n    const MAX_SIZE = 5242880;\r\n\r\n    // const [imgData, setImgData] = useState(null);\r\n    // const onChangePicture = (e) => {\r\n    //     if (e.target.files[0]) {\r\n    //         console.log(\"picture: \", e.target.files);\r\n    //         // setPicture(e.target.files[0]);\r\n    //         const reader = new FileReader();\r\n    //         reader.addEventListener(\"load\", () => {\r\n    //             setImgData(reader.result);\r\n    //         });\r\n    //         reader.readAsDataURL(e.target.files[0]);\r\n    //     }\r\n    // }\r\n\r\n    // const res3 = useEffect(() => {\r\n    //     console.log(imgData)\r\n    // }, [imgData])\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component={'h2'} variant={'h5'}>\r\n                Step three🤔\r\n            </Typography>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                {/*<FileInput name={'files'} control={control}/>*/}\r\n                <Dropzone onDrop={acceptedFiles => {\r\n                    setValues({\r\n                        files: acceptedFiles\r\n                    })\r\n\r\n                    acceptedFiles.forEach((file) => {\r\n                        const reader = new FileReader()\r\n\r\n                        reader.onabort = () => console.log('file reading was aborted')\r\n                        reader.onerror = () => console.log('file reading has failed')\r\n                        reader.onload = () => {\r\n                            // Do whatever you want with the file contents\r\n                            // setImgData(reader.result);\r\n                            setValues({\r\n                                imgData: reader.result\r\n                            })\r\n                            const binaryStr = reader.result\r\n                            console.log(binaryStr)\r\n                        }\r\n                        reader.readAsDataURL(file)\r\n                        // reader.readAsArrayBuffer(file)\r\n                    })\r\n\r\n\r\n                    // onChangePicture(acceptedFiles);\r\n                    // const reader = new FileReader();\r\n                    // reader.readAsDataURL(acceptedFiles);\r\n                    //\r\n                    // reader.onloadend = () => {\r\n                    //     setImgData(reader.result);\r\n                    // }\r\n                    // setImgData(reader.readAsDataURL(acceptedFiles));\r\n                    // setImgData(acceptedFiles);\r\n                    // reader.addEventListener('load', () => {\r\n                    //     setImgData(reader.result);\r\n                    // })\r\n                    // setImgData();\r\n                }} multiple={false} accept=\"image/jpeg, image/png\" maxSize={MAX_SIZE}>\r\n                    {({getRootProps, getInputProps}) => (\r\n                        <section>\r\n                            <div {...getRootProps()}>\r\n                                <input name={'files'} {...getInputProps()} />\r\n                                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n                <MuiThemeProvider>\r\n                    <List>\r\n                        {/*<p>test check</p>*/}\r\n                        {\r\n                            data.files && data.files.map((f, index) => (\r\n                                <ListItem key={index}>\r\n                                    {/*<p>test check</p>*/}\r\n                                    <ListItemIcon>\r\n                                        {data.imgData && <img className=\"picture__preload\" width={\"200px\"} src={data.imgData}/>}\r\n                                        {/*<InsertDriveFile/>*/}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText className={\"list__text\"} primary={f.name} secondary={f.size} />\r\n                                    {/*<img className=\"picture__preload\" src={imgData[0].path} />*/}\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </MuiThemeProvider>\r\n                <PrimaryButton>Next</PrimaryButton>\r\n            </Form>\r\n        </MainContainer>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}