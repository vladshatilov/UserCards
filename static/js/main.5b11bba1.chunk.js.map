{"version":3,"sources":["components/Header.js","components/MainContainer.js","components/Form.js","components/Input.js","components/PrimaryButton.js","DataContext.js","Step1.js","Step2.js","components/FileInput.js","Step3.js","Result.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","fontFamily","margin","spacing","textAlign","fontSize","color","textShadow","Header","myStyle","Typography","className","component","variant","marginTop","display","flexDirection","alignItems","MainContainer","children","props","Container","container","maxWidth","width","Form","noValidate","Input","forwardRef","ref","TextField","inputRef","fullWidth","PrimaryButton","Button","type","DataContext","createContext","DataProvider","useState","data","setData","Provider","value","setValues","values","prevData","useData","useContext","schema","yup","shape","firstName","matches","required","lastName","Step1","history","useHistory","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","console","log","name","push","maxLength","id","label","error","helperText","message","email","Step2","testPhone","phoneNumber","watch","hasPhone","testingPhone","onChange","event","target","tempNumber","parsePhoneNumberFromString","formatInternational","normalizePhone","backgroundColor","cursor","padding","icon","FileInput","control","defaultValue","render","onBlur","onDrop","getRootProps","getInputProps","CloudUpload","map","f","index","ListItemIcon","InsertDriveFile","ListItemText","primary","secondary","size","Step3","files","marginBottom","table","getCookie","document","cookie","token","split","c","trim","filter","startsWith","length","decodeURIComponent","Result","setSuccess","entries","Object","entry","useEffect","axios","method","url","then","response","cookies","a","formData","FormData","Swal","fire","csrftoken","try_post","JSON","stringify","fetch","body","headers","resp","status","json","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","toString","List","ListItem","onClick","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b11bba1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        fontFamily: `\"Pacifico\"`,\r\n        margin: theme.spacing(3, 0, 2),\r\n        textAlign: \"center\",\r\n        fontSize: \"40px\",\r\n        color: \"deeppink\",\r\n        textShadow: '1px 1px darkmagenta'\r\n    }\r\n}))\r\n\r\nexport const Header = () => {\r\n    const myStyle = useStyles()\r\n    return (\r\n        <Typography className={myStyle.root} component={'h1'} variant={'h5'}>Flawless register form</Typography>\r\n    );\r\n};","import React from 'react';\r\nimport {Container} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    }\r\n}))\r\n\r\nexport const MainContainer = ({children, ...props}) => {\r\n    const myStyle = useStyles()\r\n\r\n    return <Container className={myStyle.root} container={\"main\"} maxWidth={'xs'} {...props}>{children}</Container>\r\n}","import React from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\nexport const Form = ({children, ...props}) => {\r\n    const myStyle = useStyles()\r\n    return (\r\n        <form className={myStyle.root} noValidate {...props}>\r\n            {children}\r\n        </form>\r\n    );\r\n};","import React, {forwardRef} from \"react\";\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nexport const Input = forwardRef((props,ref) => {\r\n    return <TextField variant={'outlined'} margin={'normal'} inputRef={ref} fullWidth {...props} />\r\n})","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        margin: theme.spacing(3,0,2)\r\n    }\r\n}));\r\n\r\nexport const PrimaryButton = ({children, ...props}) => {\r\n    const myStyle = useStyles()\r\n    return (\r\n        <Button className={myStyle.root} type={'sumbit'} fullWidth variant={'contained'} color={'primary'} {...props}>\r\n            {children}\r\n        </Button>\r\n    );\r\n}","import React, {createContext, useContext, useState} from 'react';\r\n\r\nconst DataContext = createContext()\r\n\r\nexport const DataProvider = ({children}) => {\r\n    const [data, setData] = useState({})\r\n\r\n    const setValues = (values) => {\r\n        setData(prevData => ({\r\n            ...prevData,\r\n            ...values\r\n        }))\r\n    }\r\n\r\n    return <DataContext.Provider value={{data, setValues}}>{children}</DataContext.Provider>\r\n}\r\n\r\nexport const useData = () => useContext(DataContext)\r\n","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {Form} from \"./components/Form\";\r\nimport {Input} from './components/Input';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport * as yup from 'yup';\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {useData} from \"./DataContext\";\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().matches(/^([^0-9]*)$/, \"First name should not contain numbers\").required(\"First name is required\"),\r\n    lastName: yup.string().matches(/^([^0-9]*)$/, \"Last name should not contain numbers\").required(\"Last name is required\")\r\n})\r\n\r\n\r\nexport const Step1 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n\r\n    const {register, handleSubmit, formState: { errors }} = useForm({\r\n        defaultValues: {firstName: data.firstName, lastName: data.lastName},\r\n        mode: 'onBlur',\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        console.log(errors.name)\r\n        history.push('/step2')\r\n        setValues(data)\r\n    }\r\n    return <MainContainer>\r\n        <Typography component={'h2'} variant={'h5'}>\r\n            Step one🔥\r\n        </Typography>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Input {...register('firstName',{required: true, maxLength: 30})}\r\n                   id={'firstName'} type={\"text\"}\r\n                   label={\"First Name\"}\r\n                   error={!!errors.firstName}\r\n                   helperText={errors?.firstName?.message}\r\n            />\r\n            {/*{errors.firstName && errors.firstName.type  === \"required\" && <span>This is required</span>}*/}\r\n            <Input {...register('lastName',{required: true, maxLength: 30})}\r\n                   id={'lastName'}\r\n                   type={\"text\"}\r\n                   label={\"Last Name\"}\r\n                   error={!!errors.lastName}\r\n                   helperText={errors?.lastName?.message}\r\n            />\r\n            <PrimaryButton>Next step</PrimaryButton>\r\n        </Form>\r\n    </MainContainer>\r\n}","import React from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Form} from \"./components/Form\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Input} from \"./components/Input\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as yup from 'yup';\r\nimport {parsePhoneNumberFromString} from \"libphonenumber-js\";\r\nimport {FormControlLabel} from \"@material-ui/core\";\r\nimport {useData} from \"./DataContext\";\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().email(\"Email should have correct format\").required('This is required')\r\n})\r\n\r\nconst normalizePhone = (value) => {\r\n    const tempNumber = parsePhoneNumberFromString(value)\r\n    if(!tempNumber){\r\n        return value\r\n    }\r\n    return tempNumber.formatInternational()\r\n}\r\n\r\nexport const Step2 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n    const {register, handleSubmit, formState: {errors}, watch} = useForm({\r\n        defaultValues:{\r\n            email: data.email,\r\n            // hasPhone: data.hasPhone,\r\n            testPhone: data.testPhone,\r\n            phoneNumber: data.phoneNumber\r\n        },\r\n        mode: 'onBlur',\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n    const hasPhone = watch('hasPhone', false)\r\n    const testingPhone = watch('testPhone')\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        console.log(hasPhone)\r\n        history.push('/step3')\r\n        setValues(data)\r\n    }\r\n    return (\r\n        <MainContainer>\r\n            <Typography component={'h2'} variant={'h5'}>\r\n                Step two🐗\r\n            </Typography>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Input {...register('email', {required: true})}\r\n                       id={'email'}\r\n                       type={'email'}\r\n                       label={'Email'}\r\n                       name={'email'}\r\n                       error={!!errors.email}\r\n                       helperText={errors?.email?.message}\r\n                       required/>\r\n            {/*<FormControlLabel*/}\r\n            {/*    control={*/}\r\n            {/*        <Checkbox name={'hasPhone'} defaultValue={data.hasPhone} defaultChecked={data.hasPhone} {...register('hasPhone')} color={'primary'}/>*/}\r\n            {/*    }*/}\r\n            {/*    label={'Do you have a phone?'}*/}\r\n            {/*/>*/}\r\n            {/*<Checkbox {...register('hasPhone',{required:true})} color={'primary'}/>*/}\r\n            {/*{*/}\r\n            {/*    hasPhone && (*/}\r\n            {/*        <input type={'number'}/>*/}\r\n            {/*        // <Input name={'phoneNumber'} {...register('phoneNumber')} id={'phoneNumber'} type={'tel'} label={'Phone number'} />*/}\r\n            {/*    )*/}\r\n            {/*}*/}\r\n            <input type={'checkbox'} color={'primary'} {...register('testPhone')} />Do you have a phone?\r\n            {testingPhone && <Input name={'phoneNumber'}\r\n                                    {...register('phoneNumber')}\r\n                                    id={'phoneNumber'}\r\n                                    type={'tel'}\r\n                                    label={'Phone number'}\r\n                                    onChange={(event)=> {event.target.value = normalizePhone(event.target.value)}} />}\r\n            <PrimaryButton>Next</PrimaryButton>\r\n            </Form>\r\n        </MainContainer>\r\n    );\r\n}","import React from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport {List, ListItem, Paper} from \"material-ui\";\r\nimport {CloudUpload} from \"@material-ui/icons\";\r\nimport {ListItemIcon, makeStyles} from \"@material-ui/core\";\r\nimport {InsertDriveFile} from \"@material-ui/icons\";\r\nimport {ListItemText} from \"@material-ui/core\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    root:{\r\n        backgroundColor:\"#eee\",\r\n        textAlign:'center',\r\n        cursor:'pointer',\r\n        color: \"#333\",\r\n        padding: \"10px\",\r\n        marginTop: \"20px\"\r\n    },\r\n    icon:{\r\n        marginTop: \"16px\",\r\n        color: \"#888\",\r\n        fontSize: \"42px\"\r\n    }\r\n}))\r\nexport const FileInput = ({control, name}) => {\r\n    // const {register, handleSubmit} = useForm()\r\n    const myStyle = useStyles()\r\n\r\n    return (\r\n        <Controller control={control}\r\n                    name={name}\r\n                    defaultValue={[]}\r\n                    render={(\r\n                        // {field: {onChange, onBlur, value}},\r\n                        {onChange,onDrop, onBlur, value,...props}\r\n                        ) =>\r\n                        <>\r\n                            <Dropzone onDrop={onChange}>\r\n                            {/*<Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>*/}\r\n                            {/*<Dropzone onDrop={async (acceptedFiles) => {*/}\r\n                            {/*    console.log(acceptedFiles)*/}\r\n                            {/*    value = acceptedFiles*/}\r\n                            {/*    console.log(value)*/}\r\n                            {/*    }}>*/}\r\n  {/*                              {dropzoneProps => {*/}\r\n  {/*  return (*/}\r\n  {/*    <div>*/}\r\n  {/*      <p>Drop some files here</p>*/}\r\n  {/*    </div>*/}\r\n  {/*  );*/}\r\n  {/*}}*/}\r\n                                {\r\n                                    ({getRootProps, getInputProps}) => (\r\n                                        // <MuiThemeProvider>\r\n                                        // <Paper variant={'outlined'} {...getRootProps()}>\r\n                                        //     <CloudUpload />\r\n                                        //     <input {...getInputProps()} name={name} onBlur={onBlur} />\r\n                                        //      <p>Drag 'n' Drop files here, or click to select files</p>\r\n                                        <div className={myStyle.root} variant={'outlined'} {...getRootProps()}>\r\n                                            <CloudUpload className={myStyle.icon }/>\r\n                                            <input id={'field'} {...getInputProps()}  name={name} onBlur={onBlur} />\r\n      <p>Drop files here, or click to select files</p>\r\n    </div>\r\n                                        // </Paper>\r\n                                        // </MuiThemeProvider>\r\n                            )\r\n                                }\r\n                            </Dropzone>\r\n                            <MuiThemeProvider>\r\n                                <List>\r\n                                    <p>test check</p>\r\n                                    {\r\n                                        value && value.map((f,index) => (\r\n                                            <ListItem key={index}>\r\n                                                <p>test check</p>\r\n                                                <ListItemIcon>\r\n                                                    <InsertDriveFile />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={f.name} secondary={f.size} />\r\n                                            </ListItem>\r\n                                        ))\r\n                                    }\r\n                                </List>\r\n                            </MuiThemeProvider>\r\n                        </>\r\n                    }\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Form} from \"./components/Form\";\r\nimport {FileInput} from \"./components/FileInput\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useData} from \"./DataContext\";\r\n\r\nexport const Step3 = () => {\r\n    const history = useHistory()\r\n    const {data, setValues} = useData()\r\n    const {control, handleSubmit} = useForm({\r\n        defaultValues:{\r\n            files:data.files\r\n        }\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        history.push('/result')\r\n        setValues(data)\r\n    }\r\n\r\n    return <MainContainer>\r\n        <Typography component={'h2'} variant={'h5'}>\r\n            Step three🤔\r\n        </Typography>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <FileInput name={'files'} control={control}/>\r\n        <PrimaryButton>Next</PrimaryButton>\r\n        </Form>\r\n    </MainContainer>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {MainContainer} from \"./components/MainContainer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useData} from \"./DataContext\";\r\nimport {makeStyles, MuiThemeProvider, TableContainer} from \"@material-ui/core\";\r\nimport {Paper} from \"material-ui\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {InsertDriveFile} from \"@material-ui/icons\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {PrimaryButton} from \"./components/PrimaryButton\";\r\nimport Swal from 'sweetalert2';\r\nimport Confetti from \"react-confetti\";\r\n// import useWindowSize from 'react-use/lib/useWindowSize'\r\nimport axios from \"axios\";\r\nimport {$,jQuery} from 'jquery';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: \"30px\"\r\n    },\r\n    table: {\r\n        marginBottom: \"30px\"\r\n    },\r\n}));\r\n\r\nfunction getCookie(name) {\r\n    if (!document.cookie) {\r\n      return null;\r\n    }\r\n    const token = document.cookie.split(';')\r\n      .map(c => c.trim())\r\n      .filter(c => c.startsWith(name + '='));\r\n\r\n    if (token.length === 0) {\r\n      return null;\r\n    }\r\n    return decodeURIComponent(token[0].split('=')[1]);\r\n  }\r\n\r\n\r\n\r\nexport const Result = () => {\r\n    const [success, setSuccess] = useState(false);\r\n    const {data} = useData()\r\n    const entries = Object.entries(data).filter((entry) => entry[0] !== 'files')\r\n    const {files} = data;\r\n    const myStyle = useStyles()\r\n\r\n    useEffect(() => {\r\n            axios({\r\n                method: \"GET\",\r\n                url: \"http://127.0.0.1:8000/api/card\"\r\n            }).then(response => {\r\n                console.log(\"response\", response.data)\r\n                console.log(\"response\", response.cookies)\r\n            })\r\n        })\r\n\r\n    const onSubmit = async () => {\r\n        const formData = new FormData();\r\n        // const { width, height } = useWindowSize()\r\n        Swal.fire(\"Great job!\", \"You've passed all data!\", \"success\")\r\n        setSuccess(true)\r\n\r\n        // if (data.files) {\r\n        //     data.files.forEach(file => {\r\n        //         formData.append(\"files\", file, file.name)\r\n        //     })\r\n        // }\r\n        //\r\n        // entries.forEach(entry => {\r\n        //     formData.append(entry[0], entry[1])\r\n        // })\r\n        //\r\n        const csrftoken = getCookie('csrftoken')\r\n        console.log(csrftoken)\r\n        const try_post = {\r\n            firstName: \"Daddy\",\r\n            lastName: 'shatilov',\r\n            email: 'meme@corp.ru',\r\n            hasPhone: true,\r\n            phoneNumber: '+79123541268'\r\n        }\r\n        console.log('JSON')\r\n        console.log(JSON.stringify(entries))\r\n        console.log('try_post')\r\n        console.log(JSON.stringify(try_post))\r\n        console.log('formData')\r\n        console.log(formData)\r\n\r\n        const res = await fetch(\"http://127.0.0.1:8000/api/card/\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(try_post),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'X-CSRFToken': csrftoken\r\n            }\r\n        }).then(resp => {\r\n            console.log(resp.status)\r\n            console.log(resp.json())\r\n        })\r\n        //\r\n        // if(res.status==200){\r\n        //     Swal.fire(\"Great job!\",\"You've passed all data\", \"success\")\r\n        // }\r\n\r\n\r\n//         let object = {};\r\n//         let formData2 = new FormData(document.forms.person);\r\n//\r\n//         formData2.forEach(function (value, key) {\r\n//             object[key] = value;\r\n//         });\r\n//         let json = JSON.stringify(object);\r\n//\r\n//         let xhr = new XMLHttpRequest();\r\n//         xhr.open(\"POST\", '/submit', true)\r\n//         xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n//\r\n// // Отсылаем объект в формате JSON и с Content-Type application/json\r\n//         xhr.send(json);\r\n\r\n    }\r\n    // if (success) {\r\n    //     console.log('here is confetti')\r\n    //     return <Confetti />\r\n    //     // width={\"500px\"}\r\n    //     //                  height={\"300px\"}\r\n    // }\r\n\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component={'h2'} variant={'h5'}>\r\n                Form data 💖\r\n            </Typography>\r\n            <MuiThemeProvider>\r\n                <TableContainer className={myStyle.root} component={\"div\"}>\r\n                    <Table className={myStyle.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    Field\r\n                                </TableCell>\r\n                                <TableCell align={'right'}>\r\n                                    Value\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                entries.map(entry => (\r\n                                    <TableRow key={entry[0]}>\r\n                                        <TableCell>{entry[0]}</TableCell>\r\n                                        <TableCell align={'right'}>{entry[1]?.toString()}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {\r\n                    files &&\r\n                    <>\r\n                        <Typography component={'h2'} variant={'h5'}>\r\n                            Files 🐧\r\n                        </Typography>\r\n                        <List>\r\n                            {\r\n                                files.map((f, index) => (\r\n                                    <ListItem key={index}>\r\n                                        <ListItemIcon>\r\n                                            <InsertDriveFile/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={f.name} secondary={f.size}/>\r\n                                    </ListItem>\r\n                                ))\r\n                            }\r\n                        </List>\r\n                    </>\r\n                }\r\n            </MuiThemeProvider>\r\n            <input type={'submit'} onClick={onSubmit}/>\r\n            {/*<PrimaryButton onClick={onSubmit}>Submit</PrimaryButton>*/}\r\n            <Link to={'/'}>To the start</Link>\r\n        </MainContainer>\r\n    );\r\n}","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport {Header} from \"./components/Header\";\nimport {Step1} from \"./Step1\";\nimport {Step2} from \"./Step2\";\nimport {Step3} from \"./Step3\";\nimport {Result} from \"./Result\";\n\n// const Step1 = () => <>Step one</>\n// const Step2 = () => <>Step two</>\n// const Step3 = () => <>Step three</>\n// const Result = () => <><Link to={'/'}>To the start</Link></>\n\n// const Header = () => <h1>Please fill all forms</h1>\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Step1}/>\n          <Route path='/step2' component={Step2}/>\n          <Route path='/step3' component={Step3}/>\n          <Route path='/result' component={Result}/>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DataProvider} from \"./DataContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <DataProvider>\n            <App/>\n        </DataProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}